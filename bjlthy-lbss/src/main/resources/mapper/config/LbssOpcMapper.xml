<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.lbss.config.opc.mapper.LbssOpcMapper">

    <resultMap type="LbssOpc" id="LbssOpcResult">
        <result property="id"    column="id"    />
        <result property="passage"    column="passage"    />
        <result property="equipment"    column="equipment"    />
        <result property="nodeId"    column="nodeId"    />
        <result property="nodeName"    column="nodeName"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectLbssOpcVo">
        select id, passage,equipment, nodeId, nodeName, status, remark from lbss_opc
    </sql>

    <select id="selectLbssOpcList" parameterType="LbssOpc" resultMap="LbssOpcResult">
        <include refid="selectLbssOpcVo"/>
        <where>
            <if test="passage != null  and passage != ''"> and passage = #{passage}</if>
            <if test="equipment != null  and equipment != ''"> and equipment = #{equipment}</if>
            <if test="nodeId != null  and nodeId != ''"> and nodeId = #{nodeId}</if>
            <if test="nodeName != null  and nodeName != ''"> and nodeName like concat('%', #{nodeName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectLbssOpcById" parameterType="Integer" resultMap="LbssOpcResult">
        <include refid="selectLbssOpcVo"/>
        where id = #{id}
    </select>

    <insert id="insertLbssOpc" parameterType="LbssOpc" useGeneratedKeys="true" keyProperty="id">
        insert into lbss_opc
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passage != null">passage,</if>
            <if test="equipment != null">equipment,</if>
            <if test="nodeId != null">nodeId,</if>
            <if test="nodeName != null">nodeName,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="passage != null">#{passage},</if>
            <if test="equipment != null">#{equipment},</if>
            <if test="nodeId != null">#{nodeId},</if>
            <if test="nodeName != null">#{nodeName},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateLbssOpc" parameterType="LbssOpc">
        update lbss_opc
        <trim prefix="SET" suffixOverrides=",">
            <if test="passage != null">passage = #{passage},</if>
            <if test="equipment != null">equipment = #{equipment},</if>
            <if test="nodeId != null">nodeId = #{nodeId},</if>
            <if test="nodeName != null">nodeName = #{nodeName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLbssOpcById" parameterType="Integer">
        delete from lbss_opc where id = #{id}
    </delete>

    <delete id="deleteLbssOpcByIds" parameterType="String">
        delete from lbss_opc where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>